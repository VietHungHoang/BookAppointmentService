version: '3.8'

services:
  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

  # Redis
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis-data:/data

  # MySQL (cho employee-service)
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: emp
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql

  # PostgreSQL (cho scheduling-service)
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_DB: scheduling_db
      POSTGRES_USER: appointment
      POSTGRES_PASSWORD: hunghv
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Notification Service
  notification-service:
    build: ./services/notification-service
    container_name: notification-service
    ports:
      - "8084:8084"
    depends_on:
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq

  # Employee Service
  employee-service:
    build: ./services/employee-service
    container_name: employee-service
    ports:
      - "8082:8082"
    depends_on:
      - mysql
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/emp?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379

  # Scheduling Service
  scheduling-service:
    build: ./services/scheduling-service
    container_name: scheduling-service
    ports:
      - "8083:8083"
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/scheduling_db
      SPRING_DATASOURCE_USERNAME: appointment
      SPRING_DATASOURCE_PASSWORD: hunghv

  # Appointment Service
  appointment-booking-service:
    build: ./services/appointment-booking-service
    container_name: appointment-booking-service
    ports:
      - "8081:8081"
    depends_on:
      - redis
      - rabbitmq
    environment:
      SPRING_DATA_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbitmq

  # API Gateway
  api-gateway:
    build: ./gateway/api-gateway
    container_name: api-gateway
    ports:
      - "9090:9090"
    depends_on:
      - appointment-booking-service
      - employee-service
      - scheduling-service
      - notification-service

# Frontend App
  frontend:
    image: node:20
    container_name: scheduling_app
    working_dir: /app
    volumes:
      - ./scripts/front-end:/app
      - /app/node_modules
    ports:
      - "3000:8080"
    command: >
      sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
    tty: true

volumes:
  mysql-data:
  postgres-data:
  redis-data:

  

